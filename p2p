# stack fonctionnant sur un Synology DS918+ via Portainer-ce (portainer/portainer-ce:latest), il faudra peut-etre adapter les images si vous utilisez un autre serveur/systeme
# editer les 'XXXX' ainsi que les PUID, PGID et volumes pour que cela fonctionne avec votre systeme

version: "3"
services:
  radarr:
   # automatisation et gestion de telechargement de films : https://radarr.video/
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
     - 7878:7878
    volumes:
      - <\path to data>:/config
      - <\path/to/movies>:/movies
      - <\path/to/downloadclient-downloads>:/downloads
    environment:
     - PUID=100
     - PGID=1000
     - TZ=Europe/Paris

  sonarr:
   # automatisation et gestion de telechargement de series : https://sonarr.tv/
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
     - 8989:8989
    volumes:
      - <\path to data>:/config
      - <\path/to/tv>:/tv
      - <\path/to/downloadclient-downloads>:/downloads
    environment:
     - PUID=100
     - PGID=1000
     - TZ=Europe/Paris

  bazarr:
   # automatisation et gestion de telechargement de sous-titres pour films et series : https://www.bazarr.media/
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr:latest
    environment:
      - PUID=100
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /srv/dev-disk-by-label-NAS/Config/Bazarr:/config
      - /srv/dev-disk-by-label-NAS/Data/Movies:/movies
      - /srv/dev-disk-by-label-NAS/Data/Series:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  overseerr:
   # outil de gestion des requetes (les votres et ceux des utilisateurs de votre Plex) et de d√©couverte de medias concu pour fonctionner avec Plex, Radarr et Sonarr : https://overseerr.dev/
    container_name: overseerr
    image: lscr.io/linuxserver/overseerr:latest
    environment:
      - PUID=100
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /path/to/appdata/config:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  gluetun:
   # client VPN pour plusieurs fournisseurs VPN, ecrit en Go et utilisant OpenVPN ou Wireguard, DNS sur TLS, avec quelques serveurs proxy integres : https://github.com/qdm12/gluetun#features
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    hostname: gluetun
    labels:
      com.centurylinklabs.watchtower.enable: "false" # la MAJ de Watchtower fait crasher le network des autres containers lies a gluetun, il vaut mieux forcer la MAJ en manuel de temps en temps, cf. watchtower tout en bas
    # line above must be uncommented to allow external containers to connect. See https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      # liste des ports des containers devant passer par le client VPN
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8080:8080/tcp # qBittorrent Web UI
      - 6881:6881/tcp # qBittorrent
      - 6881:6881/udp # qBittorrent
      - 8191:8191/tcp # Flaresolverr Web UI
      - 9117:9117/tcp # Jackett Web UI
      - 25500:25500/tcp # Soulseek Web UI
      - 25501:25501/tcp # Soulseek Web UI https
      - 50000:50000/tcp # Soulseek
    volumes:
      - /volume1/docker/gluetun:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun/wiki
      - VPN_SERVICE_PROVIDER=XXXX
      - VPN_TYPE=openvpn
      # OpenVPN:
      - OPENVPN_USER=XXXX
      - OPENVPN_PASSWORD=XXXX
      - SERVER_COUNTRIES=France
      # Timezone for accurate log times
      - TZ=Europe/Paris
      - PUID=100
      - PGID=1000
    restart: always
      
  flaresolverr:
   # serveur proxy pour contourner la protection Cloudflare et DDoS-GUARD, genre celle qu'il y a parfois sur YGG, a renseigner dans Jackett : https://github.com/FlareSolverr/FlareSolverr
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Paris
    restart: always
    # la ligne ci-dessous signifie que ce container utilise la connection du client VPN Gluetun
    network_mode: "service:gluetun"
    
  jackett:
   # passerelle entre vos trackers torrent (YGG par exemple) et Radarr, Sonarr... : https://github.com/Jackett/Jackett
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=100
      - PGID=1000
      - TZ=Europe/Paris
      - AUTO_UPDATE=true #optional
    volumes:
      - /volume1/docker/jackett/config:/config
      - /volume1/docker/jackett/downloads:/Downloads
    labels:
      com.centurylinklabs.watchtower.enable: "false" # pour eviter le conflit avec la MAJ auto interne au container et celle de Watchtower
    restart: always
    # la ligne ci-dessous signifie que ce container utilise la connection du client VPN Gluetun
    network_mode: "service:gluetun"

  qbittorrent:
   # client torrent : https://www.qbittorrent.org/
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=100
      - PGID=1000
      - TZ=Europe/Paris
      - WEBUI_PORT=8080
    volumes:
      - /volume1/docker/qbittorrent/config:/config
      - /volume1/Downloads:/Downloads
    restart: always
    # la ligne ci-dessous signifie que ce container utilise la connection du client VPN Gluetun
    network_mode: "service:gluetun"
    
  slskd:
   # Aaaah, enfin Soulseek version serveur ! Pour moi, c'est meilleur reseau de partage de musique, on trouve tout (bon, je cherche quasi que du metal hein !)
   # l'interface mobile est fonctionnel, ideal pour ajouter des albums sur Plex quand on vous recommande un groupe entre deux bieres : https://github.com/slskd/slskd
    image: slskd/slskd:latest
    container_name: slskd
    environment:
      - PUID=100
      - PGID=1000
      - TZ=Europe/Paris
      - SLSKD_HTTP_PORT=25500
      - SLSKD_HTTPS_PORT=25501
      - SLSKD_SHARED_DIR=/shares
      - SLSKD_DOWNLOADS_DIR=/downloads
      - SLSKD_SLSK_USERNAME=XXXX
      - SLSKD_SLSK_PASSWORD=XXXX
      - SLSKD_USERNAME=XXXX
      - SLSKD_PASSWORD=XXXX
      - SLSKD_SHARE_FILTER=SYNOINDEX_MEDIA_INFO;\.DS_Store;\.ini;Thumbs.db;\#recycle;.@recycle;.@tmp;.@SynoEAStream;\@eaDir
    volumes:
      - /volume1/docker/soulseek:/app
      - /volume1/music/Soulseek:/downloads
      - /volume1/music:/shares
    restart: always
    # la ligne ci-dessous signifie que ce container utilise la connection du client VPN Gluetun
    network_mode: "service:gluetun"

  watchtower:
   # MAJ automatique de toutes les images de vos containers ne contenant pas le label 'com.centurylinklabs.watchtower.enable: "false"'
    container_name: watchtower
    image: containrrr/watchtower:amd64-latest
    restart: always
    # pour lancer manuellement une MAJ, decommenter la ligne en-dessous et updater la stack ; il faudra re-updater la stack complete si Gluetun est MAJ afin que les containers passant par son network soient a nouveau fonctionnel
    #command: --run-once
    environment:
      - TZ=Europe/Paris
      - WATCHTOWER_SCHEDULE= 0 0 6 * * *
      - WATCHTOWER_LABEL_ENABLE=false
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_REMOVE_VOLUMES=true
      - WATCHTOWER_NOTIFICATIONS_LEVEL=debug
      - WATCHTOWER_INCLUDE_STOPPED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
